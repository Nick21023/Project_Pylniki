#include <ESP8266WiFi.h>
#include <PubSubClient.h>
#include <Wire.h>

#define ssid  "" //write your SSID
#define password  "" //write password
#define mqtt_server "test.mosquitto.org" //url or ip mqtt server
#define mqtt_port 1883 //port for mqtt server

#define DUST_ST "DUST_ST"
#define DUST_PW "DUST_PW"

#define pinLed 5
#define buttonPin 16
#define button_LED_Pin 4

bool state = false;
int power = 0;

WiFiClient espClient;
PubSubClient client(espClient);

void setup_wifi() {
  delay(10);
  // We start by connecting to a WiFi network
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  randomSeed(micros());
  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}

void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print("Message arrived [");
  Serial.print(topic);
  Serial.print("] ");

  char Mess[3] = "";
  for (int i = 0; i < length; i++) {
    Serial.print((char)payload[i]);
    Mess[i] = (char)payload[i];
  }
  Serial.println();
  if (String(topic) == DUST_ST) {
      Wire.beginTransmission(8);
      Wire.write(Mess);
      Wire.endTransmission(); 
  }


}

void reconnect() {
  // Loop until we're reconnected
  if(WiFi.status() != WL_CONNECTED)
    setup_wifi();

  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    // Create a random client ID
    String clientId = "ESP8266Client-";
    clientId += String(random(0xffff), HEX);
    // Attempt to connect
    if (client.connect(clientId.c_str())) {
      Serial.println("connected");
      client.subscribe(DUST_ST);
      client.subscribe(DUST_PW);
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      // Wait 5 seconds before retrying
      delay(5000);
    }
  }
}


void setup() {
  Wire.begin(5, 4);

  Serial.begin(115200);

  setup_wifi();
  client.setServer(mqtt_server, mqtt_port);
  client.setCallback(callback);
}

void loop() {

  if (!client.connected()) {
    reconnect();
  }
  client.loop();

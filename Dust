// #include <Wire.h>

// void setup() {
//  Serial.begin(9600); /* открываем серийный порт для дебаггинга */
//  Wire.begin(5, 4); /* задаем i2c мост через контакты SDA=D1 и SCL=D2 на NodeMCU */
// }

// void loop() {
//  Wire.beginTransmission(8); /* Начинаем передачу на адресе 8 */
//  Wire.write("Hello Arduino");  /* Отправляем "hello Arduino" */
//  Wire.endTransmission();    /* прекращаем передачу */

//  Wire.requestFrom(8, 13); /* запрашиваем и считываем 13 байт с адреса 8 slave устройства */
//  while(Wire.available()){
//     char c = Wire.read();
//   Serial.print(c);
//  }
//  Serial.println();
//  delay(1000);
// }

#include <ESP8266WiFi.h>
#include <PubSubClient.h>
#include <Wire.h>

#define ssid  "apart21" //write your SSID
#define password  "kirzhach" //write password
#define mqtt_server "test.mosquitto.org" //url or ip mqtt server
#define mqtt_port 1883 //port for mqtt server

#define DUST_ST "DUST_ST"
#define DUST_PW "DUST_PW"

#define pinLed 5
#define buttonPin 16
#define button_LED_Pin 4

bool state = false;
int power = 0;

WiFiClient espClient;
PubSubClient client(espClient);

void setup_wifi() {
  delay(10);
  // We start by connecting to a WiFi network
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  randomSeed(micros());
  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}

void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print("Message arrived [");
  Serial.print(topic);
  Serial.print("] ");

  String input = "";
  for (int i = 0; i < length; i++) {
    Serial.print((char)payload[i]);
    input += (char)payload[i];
  }
  Serial.println();
  if (String(topic) == DUST_ST) {
      // char Mess[3]
      
      Wire.beginTransmission(8);
      Wire.write(21);
      Wire.endTransmission(); 
  }


}

void reconnect() {
  // Loop until we're reconnected
  if(WiFi.status() != WL_CONNECTED)
    setup_wifi();

  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    // Create a random client ID
    String clientId = "ESP8266Client-";
    clientId += String(random(0xffff), HEX);
    // Attempt to connect
    if (client.connect(clientId.c_str())) {
      Serial.println("connected");
      client.subscribe(DUST_ST);
      client.subscribe(DUST_PW);
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      // Wait 5 seconds before retrying
      delay(5000);
    }
  }
}


void setup() {
  Wire.begin(5, 4);
  // pinMode(pinLed, OUTPUT);
  // pinMode(buttonPin, INPUT);
  // pinMode(button_LED_Pin, OUTPUT);

  Serial.begin(115200);

  setup_wifi();
  client.setServer(mqtt_server, mqtt_port);
  client.setCallback(callback);
}

void loop() {

  if (!client.connected()) {
    reconnect();
  }
  client.loop();
  // if (digitalRead(buttonPin) == HIGH) {
  //   while (digitalRead(buttonPin) == HIGH);
  //   Serial.print("Rbutton:   ");
  //   Serial.println(state);
  //   if (state == true)
  //     client.publish("Pr_DUST_ST", "0");
  //   else
  //     client.publish("Pr_DUST_ST", "1");
  //   delay(300);
  // }

}
